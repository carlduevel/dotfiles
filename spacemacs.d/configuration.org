#+TITLE: Emacs configuration
#+AUTHOR: Carl Düvel
#+EMAIL: c.a.duevel@gmail.com 
* Editing
** Escape mode
#+BEGIN_SRC emacs-lisp
  (setq-default evil-escape-delay 0.2)
  (setq-default evil-escape-key-sequence "jk")
#+END_SRC
** Save Buffer on focus out
Give Emacs the nice IDEA feature of "auto-save on focus lost".
Pulled from [[https://emacsredux.com/blog/2014/03/22/a-peek-at-emacs-24-dot-4-focus-hooks/][here.]]
#+BEGIN_SRC emacs-lisp
(add-hook 'focus-out-hook (lambda () (save-some-buffers t)))
#+END_SRC
** Automatic Line Breaks
#+BEGIN_SRC emacs-lisp
(add-hook 'text-mode-hook 'auto-fill-mode)
#+END_SRC
** Auto-Save in =/tmp=

Store backups and auto-saved files in =TEMPORARY-FILE-DIRECTORY= (which
defaults to /tmp on Unix), instead of in the same directory as the
file.

#+BEGIN_SRC emacs-lisp
(setq backup-directory-alist
      `((".*" . ,temporary-file-directory)))
(setq auto-save-file-name-transforms
      `((".*" ,temporary-file-directory t)))
#+END_SRC
* Org mode
** UI
Always indent for better overview.
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook 'org-indent-mode)
#+END_SRC
 Hide empty lines between sub-headers in collapsed view.
#+BEGIN_SRC emacs-lisp
(setq org-cycle-separator-lines 0)
#+END_SRC
Log state changes of todos into the LOGBOOK drawer.
#+BEGIN_SRC emacs-lisp
(setq org-log-into-drawer t)
#+END_SRC
Hide leading stars.
#+BEGIN_SRC emacs-lisp
(setq org-hide-leading-stars t)
#+END_SRC
** GTD setup
#+BEGIN_SRC emacs-lisp
  (require 'org)
  (setq org-dir "~/Dropbox/org/")
  (setq gtd-dir (concat org-dir "gtd/"))
  (setq inbox-file (concat gtd-dir "inbox.org"))
  (setq gtd-file (concat gtd-dir "gtd.org"))
  (setq org-agenda-files (list
                          inbox-file
                          gtd-file))
  (setq org-agenda-skip-scheduled-if-done t)
  (setq org-agenda-skip-deadline-prewarning-if-scheduled t)
  (setq org-agenda-window-setup 'current-window) 


  (setq org-todo-keywords
        '((sequence "TODO(t!)" "|" "DONE(d!)")
          (sequence "PROJECT(p!)" "AGENDA(a!)" "|" "MINUTES(m!)")
          (sequence "WAITING(w!)" "|" "PROGRESS(p!)")))


  (setq org-refile-targets '((org-agenda-files :maxlevel . 3)))
  (setq org-refile-use-outline-path 'file)

  (setq org-agenda-custom-commands
        '(("h" "@home" tags-todo "@home")
          ("c" "@computer" tags-todo "@computer")
          ("H" "+hasi" tags-todo "+hasi")
          ("p" "@phone" tags-todo "@phone")
          ("b" "@BO" tags-todo "@BO")))
#+END_SRC
Org Capture Templates are explained [[http://orgmode.org/manual/Capture-templates.html][here]] and Org Template expansion
[[http://orgmode.org/manual/Template-expansion.html#Template-expansion][here.]] There is also a  need to load org-protocol to get the
[[https://github.com/sprig/org-capture-extension][org-capture-extension]] going.

#+BEGIN_SRC emacs-lisp
  (setq org-default-notes-file  inbox-file)

  (require 'org-protocol)

  (setq snippets-file (concat org-dir "snippets.org"))

  (setq org-capture-templates '(("t" "Todo" entry
                                 (file+headline  gtd-file "Misc")"* TODO %i%?")
                                ("i" "Inbox" entry
                                 (file+headline  inbox-file "To process:")"* %i%?")
                                ("s" "Code Snippet" entry (file+headline snippets-file "Snippets")
                                 ;; Prompt for tag and language
                                 "* %?\t%^g\n#+BEGIN_SRC %^{language}\n%i\n#+END_SRC")
                                ("q" "Protocol" entry
                                 (file+headline inbox-file "Quotes")
                                 "* %^{Title}\nSource: %u, %c\n #+BEGIN_QUOTE\n%i\n#+END_QUOTE\n\n\n%?")
                                ("L" "Protocol Link" entry
                                 (file+headline inbox-file "Links")
                                 "* %? [[%:link][%:description]] \nCaptured on: %U")))

#+END_SRC
*** Projects
#+BEGIN_SRC emacs-lisp
  (setq org-stuck-projects '("/PROJECT" ("TODO" "NEXT" "WAITING") nil nil))
#+END_SRC
** Keybindings
I set TODOs to done all the time and archive them afterwards. This should be one
shortcut.
#+BEGIN_SRC emacs-lisp
  (defun done-archive ()
    (interactive)
    (org-todo "DONE")
    (org-archive-subtree-default))
  (spacemacs/set-leader-keys "od" 'done-archive)
#+END_SRC 
** Org extensions
#+BEGIN_SRC emacs-lisp
(setq org-journal-dir "~/Dropbox/org/journal/")
#+END_SRC
* Neotree
In order to have nice icons for neotree[[https://github.com/domtronn/all-the-icons.el][ all-the-icons package]]  has to be installed.
#+BEGIN_SRC emacs-lisp 
(setq neo-theme 'icons)
#+END_SRC
Add source control integration.
According to this[[https://github.com/jaypei/emacs-neotree/issues/126][ bug report]] this is not performing well on big projects.
#+BEGIN_SRC emacs-lisp
(setq neo-vc-integration '(face))
#+END_SRC
* Programming
** Clojure
Pretty symbols for anonymous functions, set literals and partial, like =(λ [a]
(+ a 5))=, =ƒ(+ % 5)=, =∈{2 4 6}= and =Ƥ=.
#+BEGIN_SRC emacs-lisp
  (setq clojure-enable-fancify-symbols t)
#+END_SRC


